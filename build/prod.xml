<?xml version="1.0" encoding="UTF-8"?>

<project name="Spot" default="build">
	<target name="build" depends="prepare,lint-modified,phpab"/>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/logs"/>
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build/logs"/>
	</target>

	<!--
	    More faster : lint only modified files

	    We create a new target to retrieve a list of modified files
	    If there is modified files, execute the lint target, else skip
	    with the `if="modifiedFiles"` option.

	    The list of modified files is stored in ${files.modified}, one file per line.

	    Feel free to reuse the checkModified target to execute other tasks only on
	    newly modified .php files
	-->

	<!-- A new target to search for modified files -->
	<target name="checkModified" description="Check for modified php files">
	    <echo message="Searching for newly modified files" />

	    <path id="editedfiles">
	        <fileset dir="${basedir}/src">
	            <!-- Search only for modified files -->
	            <modified />

	            <!-- Search only for files with .php extension -->
	            <include name="**/*.php" />

	            <!-- Exclude vendor directory -->
	            <exclude name="**/vendor/**" />
	        </fileset>

			<fileset dir="${basedir}/tests">
				<!-- Search only for modified files -->
				<modified />

				<!-- Search only for files with .php extension -->
				<include name="**/*.php" />

				<!-- Exclude vendor directory -->
	            <exclude name="**/vendor/**" />
			</fileset>
	    </path>

	    <pathconvert pathsep="${line.separator}" property="files.modified" refid="editedfiles" />

	    <condition property="modifiedFiles">
	        <not>
	            <equals arg1="${files.modified}" arg2="" />
	        </not>
	    </condition>
	</target>

	<!-- The Php Lint target. Will only execute if and only if there is some modified files -->
	<target name="lint-modified" depends="checkModified" description="Perform syntax check of sourcecode files" if="modifiedFiles">
	    <echo message="Linting php files" />
	    <exec executable="bash" failonerror="true">
	        <arg value="-c" />
	        <arg value="echo '${files.modified}' | xargs -n 1 -P 4 php -l" />
	    </exec>
	</target>

	<!-- Just lint all files in parallel. If you want to lint all files, not only on modified one -->
	<target name="lint-all" description="Perform syntax check of sourcecode files">
	    <exec executable="bash" failonerror="true">
	        <arg value="-c" />
	        <arg value="find -L ${basedir}/ifs -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l" />
	    </exec>
	</target>

	<target name="phpab" description="Generate autoloader scripts">
		<exec executable="phpab">
			<arg value="--output" />
			<arg path="${basedir}/src/Spot/autoload.php" />
			<arg value="${basedir}/src" />
		</exec>

		<exec executable="phpab">
			<arg value="--output" />
			<arg path="${basedir}/tests/autoload.php" />
			<arg path="${basedir}/tests" />
		</exec>
	</target>
</project>
